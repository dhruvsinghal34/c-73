{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\DHRUV\\\\projects\\\\ToastsWily-master\\\\screens\\\\BookTransactionScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase';\nimport db from \"../config.js\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionScreen).call(this));\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.initiateBookIssue = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Issue\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'BookAvalibility': false\n              });\n              db.collection(\"Students\").doc(_this.state.scannedStudentId).update({\n                'numberofbook': firebase.firestore.FieldValue.increment(1)\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.initiateBookReturn = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transaction\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Return\"\n              }));\n\n            case 2:\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'BookAvalibility': true\n              }));\n\n            case 4:\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(db.collection(\"Students\").doc(_this.state.scannedStudentId).update({\n                'numberofbook': firebase.firestore.FieldValue.increment(-1)\n              }));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleTransaction = function _callee5() {\n      var transactionType, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(_this.checkBookEligibility());\n\n            case 2:\n              transactionType = _context5.sent;\n\n              if (transactionType) {\n                _context5.next = 8;\n                break;\n              }\n\n              Alert.alert(\"this book is not avaible in our library\");\n\n              _this.setState({\n                scannedBookId: \"\",\n                scannedStudentId: \"\"\n              });\n\n              _context5.next = 20;\n              break;\n\n            case 8:\n              if (!(transactionType === \"issue\")) {\n                _context5.next = 15;\n                break;\n              }\n\n              _context5.next = 11;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookIssue());\n\n            case 11:\n              isStudentEligible = _context5.sent;\n\n              if (isStudentEligible === true) {\n                _this.initiateBookIssue();\n\n                Alert.alert(\"book is isssued to the student\");\n              }\n\n              _context5.next = 20;\n              break;\n\n            case 15:\n              if (!(transactionType === \"return\")) {\n                _context5.next = 20;\n                break;\n              }\n\n              _context5.next = 18;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookReturn());\n\n            case 18:\n              isStudentEligible = _context5.sent;\n\n              if (isStudentEligible === true) {\n                _this.initiateBookReturn();\n\n                Alert.alert(\"book is returned to the library\");\n              }\n\n            case 20:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    };\n\n    _this.checkStudentEligibilityForBookIssue = function _callee6() {\n      var studentRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"Students\").where(\"studentID\", \"==\", _this.state.scannedStudentId).get());\n\n            case 2:\n              studentRef = _context6.sent;\n              isStudentEligible = \"\";\n\n              if (studentRef.docs.length === 0) {\n                isStudentEligible = false;\n                Alert.alert(\" student ID does not exists in the database\");\n\n                _this.setState({\n                  scannedBookID: \"\",\n                  scannedStudentId: \"\"\n                });\n              } else {\n                studentRef.docs.map(function (doc) {\n                  var student = doc.data();\n\n                  if (student.numberofbook < 2) {\n                    isStudentEligible = true;\n                  } else {\n                    isStudentEligible = false;\n                    Alert.alert(\"the maxiumum numbers of books is been issued to the student\");\n\n                    _this.setState({\n                      scannedBookId: \"\",\n                      scannedStudentId: \"\"\n                    });\n                  }\n                });\n              }\n\n              return _context6.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    };\n\n    _this.checkStudentEligibilityForBookReturn = function _callee7() {\n      var TransactionRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transaction\").where(\"bookId\", \"==\", _this.state.scannedBookID).limit(1).get());\n\n            case 2:\n              TransactionRef = _context7.sent;\n              isStudentEligible = \"\";\n              TransactionRef.docs.map(function (doc) {\n                var Transaction = doc.data();\n\n                if (Transaction.studentId === _this.state.scannedStudentID) {\n                  isStudentEligible = true;\n                } else {\n                  isStudentEligible = false;\n                  Alert.alert(\"the book is not be issued by the student\");\n\n                  _this.setState({\n                    scannedBookID: \"\",\n                    scannedStudentID: \"\"\n                  });\n                }\n              });\n              return _context7.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      });\n    };\n\n    _this.checkBookEligibility = function _callee8() {\n      var bookRef, transactionType;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"books\").where(\"BookID\", \"==\", _this.state.scannedBookId).get());\n\n            case 2:\n              bookRef = _context8.sent;\n              transactionType = \"\";\n\n              if (bookRef.docs.length === 0) {\n                transactionType = false;\n              } else {\n                bookRef.docs.map(function (doc) {\n                  var book = doc.data();\n\n                  if (book.BookAvalibility === true) {\n                    transactionType = \"issue\";\n                  } else {\n                    transactionType = \"return\";\n                  }\n                });\n              }\n\n              return _context8.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedBookId: text\n            });\n          },\n          value: this.state.scannedBookId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function _callee9() {\n            return _regeneratorRuntime.async(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _this2.handleTransaction();\n\n                  case 1:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#FBC02D',\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/DHRUV/projects/ToastsWily-master/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","initiateBookIssue","collection","add","firestore","Timestamp","now","toDate","doc","update","FieldValue","increment","initiateBookReturn","handleTransaction","checkBookEligibility","transactionType","Alert","alert","checkStudentEligibilityForBookIssue","isStudentEligible","checkStudentEligibilityForBookReturn","where","get","studentRef","docs","length","scannedBookID","map","student","numberofbook","limit","TransactionRef","Transaction","studentId","scannedStudentID","bookRef","book","BookAvalibility","transactionMessage","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","text","scanButton","buttonText","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text,View,TouchableOpacity,TextInput,Image,StyleSheet,KeyboardAvoidingView ,ToastAndroid,Alert} from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase'\nimport db from '../config.js'\n\nexport default class TransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId: '',\n        scannedStudentId:'',\n        buttonState: 'normal',\n        transactionMessage: ''\n      }\n    }\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    }\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n\n      if(buttonState===\"BookId\"){\n        this.setState({\n          scanned: true,\n          scannedBookId: data,\n          buttonState: 'normal'\n        });\n      }\n      else if(buttonState===\"StudentId\"){\n        this.setState({\n          scanned: true,\n          scannedStudentId: data,\n          buttonState: 'normal'\n        });\n      }\n      \n    }\n\n    initiateBookIssue = async()=>{\n      //add a transaction\n      db.collection(\"transaction\").add({\n        'studentId': this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date' : firebase.firestore.Timestamp.now().toDate(),\n        'transactionType': \"Issue\"\n      })\n      //change book status\n      db.collection(\"books\").doc(this.state.scannedBookId).update({\n        'BookAvalibility': false\n      })\n      //change number  of issued books for student\n      db.collection(\"Students\").doc(this.state.scannedStudentId).update({\n        'numberofbook': firebase.firestore.FieldValue.increment(1)\n      })\n    }\n\n    initiateBookReturn = async()=>{\n      //add a transaction\n      await db.collection(\"transaction\").add({\n        'studentId': this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date' : firebase.firestore.Timestamp.now().toDate(),\n        'transactionType': \"Return\"\n      })\n      //change book status\n      await db.collection(\"books\").doc(this.state.scannedBookId).update({\n        'BookAvalibility': true\n      })\n      //change number  of issued books for student\n      await db.collection(\"Students\").doc(this.state.scannedStudentId).update({\n        'numberofbook': firebase.firestore.FieldValue.increment(-1)\n      })\n    }\n\n\n    handleTransaction = async()=>{\n      var transactionType = await this.checkBookEligibility();\n      if(!transactionType){\n         Alert.alert(\"this book is not avaible in our library\")\n         this.setState({\n           scannedBookId:\"\",\n           scannedStudentId:\"\"\n         })\n      }\n      else if (transactionType===\"issue\"){\n         var isStudentEligible= await this.checkStudentEligibilityForBookIssue();\n         if(isStudentEligible===true){\n            this.initiateBookIssue()\n            Alert.alert(\"book is isssued to the student\")\n         }\n      }\n      else if (transactionType===\"return\"){\n          var isStudentEligible= await this.checkStudentEligibilityForBookReturn();\n          if(isStudentEligible===true){\n            this.initiateBookReturn();\n            Alert.alert (\"book is returned to the library\")\n          }}}\n\n checkStudentEligibilityForBookIssue= async ()=>{\n   var studentRef= await db.collection(\"Students\").where(\"studentID\",\"==\",this.state.scannedStudentId).get()\n   var isStudentEligible=\"\";\n   if(studentRef.docs.length===0){\n     isStudentEligible=false;\n     Alert.alert (\" student ID does not exists in the database\")\n     this.setState({\n       scannedBookID:\"\",\n       scannedStudentId:\"\"\n     })\n   }\n   else {\n     studentRef.docs.map((doc)=>{\n      var student = doc.data();\n      if(student.numberofbook<2){\n        isStudentEligible=true;\n      }\n      else{\n        isStudentEligible=false;\n        Alert.alert(\"the maxiumum numbers of books is been issued to the student\")\n        this.setState({\n          scannedBookId:\"\",\n          scannedStudentId:\"\"\n        })\n      }\n     })\n   }\n   return isStudentEligible\n }\n checkStudentEligibilityForBookReturn=async ()=>{\n  var TransactionRef=await db.collection(\"transaction\").where(\"bookId\",\"==\",this.state.scannedBookID).limit(1).get()\n  var isStudentEligible=\"\";\n  TransactionRef.docs.map((doc)=>{\n       var Transaction = doc.data();\n       if(Transaction.studentId===this.state.scannedStudentID){\n       isStudentEligible=true;\n       }\n       else{\n         isStudentEligible=false;\n         Alert.alert(\"the book is not be issued by the student\")\n         this.setState({\n           scannedBookID:\"\",\n           scannedStudentID:\"\"\n         })\n        }\n      })\n  return isStudentEligible\n }\n    checkBookEligibility = async()=>{\n      var bookRef= await db.collection(\"books\").where(\"BookID\",\"==\",this.state.scannedBookId).get()\n      var transactionType=\"\";\n      if(bookRef.docs.length===0){\n         transactionType=false;\n      }\n      else{\n        bookRef.docs.map((doc)=>{\n           var book=doc.data();\n          if(book.BookAvalibility===true){\n             transactionType=\"issue\"\n          }\n          else{\n            transactionType=\"return\"\n          }\n        })\n      }\n      return transactionType;\n    }\n\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n          <KeyboardAvoidingView  style={styles.container} behavior=\"padding\" enabled>\n            <View>\n              <Image\n                source={require(\"../assets/booklogo.jpg\")}\n                style={{width:200, height: 200}}/>\n              <Text style={{textAlign: 'center', fontSize: 30}}>Wily</Text>\n            </View>\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Book Id\"\n              onChangeText={text =>this.setState({scannedBookId:text})}\n              value={this.state.scannedBookId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Student Id\"\n              onChangeText ={text => this.setState({scannedStudentId:text})}\n              value={this.state.scannedStudentId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"StudentId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n            <TouchableOpacity\n              style={styles.submitButton}\n              onPress={async()=>{\n               this.handleTransaction();\n              }}>\n          <Text style={styles.submitButtonText}>Submit</Text>\n            </TouchableOpacity>\n          </KeyboardAvoidingView>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 15,\n      textAlign: 'center',\n      marginTop: 10\n    },\n    inputView:{\n      flexDirection: 'row',\n      margin: 20\n    },\n    inputBox:{\n      width: 200,\n      height: 40,\n      borderWidth: 1.5,\n      borderRightWidth: 0,\n      fontSize: 20\n    },\n    scanButton:{\n      backgroundColor: '#66BB6A',\n      width: 50,\n      borderWidth: 1.5,\n      borderLeftWidth: 0\n    },\n    submitButton:{\n      backgroundColor: '#FBC02D',\n      width: 100,\n      height:50\n    },\n    submitButtonText:{\n      padding: 10,\n      textAlign: 'center',\n      fontSize: 20,\n      fontWeight:\"bold\",\n      color: 'white'\n    }\n  });"]},"metadata":{},"sourceType":"module"}